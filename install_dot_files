#!/bin/sh

# Install dotfiles as symlinks to files in git repo
# Written in the most basic Bourne shell script for portability
# and running on small containers, etc.

VERBOSITY_LEVEL=1

##
## Define functions up front
##
verbose_echo() {
  VERBOSITY_OF_MESSAGE=$1; shift
  echo VERBOSITY_OF_MESSAGE = $VERBOSITY_OF_MESSAGE 
  if [ "$VERBOSITY_LEVEL" -ge "$VERBOSITY_OF_MESSAGE " ]; then
    echo $*
  fi
}

# We want symbolic links relative to the home directory
# so work out the relative destination.
DOTFILESRCDIR=`pwd | sed -e s?$HOME/??g`
verbose_echo 2 "DOTFILESRCDIR is $DOTFILESRCDIR"

# We expect to be run from the source directory,
# do a quick sanity check that this is so.
THIS_SCRIPT_NAME=`basename $0`
THIS_SCRIPT_FILE="$HOME/$DOTFILESRCDIR/$THIS_SCRIPT_NAME" 
if [ ! -f "$THIS_SCRIPT_FILE" ]; then
  echo "$THIS_SCRIPT_NAME needs to be run from the dotfiles source dir"
  exit 1
fi


# We want to make symbolic links in the home directory,
# so move there.
cd $HOME

# Handle case where target is an existing symbolic link
if [ -L .vimrc ]; then
  echo '$HOME/.vimrc exists and is a symbolic link, skipping...'
  # FIXME: should check if it points where we think it should,
  # and continue silently if so, or give a warning for a manual
  # fix if not.
  exit 0
fi


# Give warning if file already exists and is a regular file
if [ -f .vimrc ]; then
  echo '$HOME/.vimrc already exists, and is a regular file not'
  echo 'a symbolic link. Not touching it - please handle it manually.'
  exit 1
fi

if [ ! -e $HOME/.vimrc ]; then
  echo '$HOME/.vimrc does not exist'
  echo 'symbolically linking $HOME/.vimrc to' ${DOTFILESRCDIR}/vimrc
  ln -s ${DOTFILESRCDIR}/vimrc .vimrc
  exit 0
fi

